# https://mariadb.com/kb/en/authentication-plugin-unix-socket/
---
- name: Set the MariaDB root use to use socket authentication
  block:

    - name: Enable MariaDB root logins with a socket
      community.mysql.mysql_query:
        query:
          - ALTER USER root@localhost IDENTIFIED VIA unix_socket
          - FLUSH PRIVILEGES
        login_db: mysql
        login_user: root
        login_password: "{{ mariadb_root_password }}"
      when:
        - mariadb_community
        - ( mariadb_root_password is defined ) and ( mariadb_root_password | length > 0 )
      no_log: true

    # - name: Enable MariaDB root logins with a socket
    #   ansible.builtin.command: mysql -uroot -p{{ mariadb_root_password }} -e "ALTER USER root@localhost IDENTIFIED VIA unix_socket; FLUSH PRIVILEGES;" mysql
    #   when:
    #     - not mariadb_community
    #     - ( mariadb_root_password is defined ) and ( mariadb_root_password | length > 0 )
    #   no_log: true

    - name: Remove /root/.my.cnf
      ansible.builtin.file:
        path: /root/.my.cnf
        state: absent

    - name: Query the MariaDB users using a socket
      community.mysql.mysql_info:
        filter:
          - databases
          - users
          - version
        return_empty_dbs: true
        login_user: root
        login_unix_socket: /run/mysqld/mysqld.sock
      register: mariadb_info

    - name: Set a variable for the root authentication plugin
      ansible.builtin.set_fact:
        mariadb_root_auth_current: "{{ mariadb_info.users.localhost.root.plugin }}"

    - name: Debug MariaDB root authentication plugin
      ansible.builtin.debug:
        var: mariadb_root_auth_current
        verbosity: 2

  tags:
    - mariadb
...
