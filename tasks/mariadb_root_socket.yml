# https://mariadb.com/kb/en/authentication-plugin-unix-socket/
---
- name: Set the MariaDB root use to use socket authentication
  block:

    # - name: Enable MariaDB root logins with a socket
    #   community.mysql.mysql_query:
    #     query:
    #       - ALTER USER root@localhost IDENTIFIED VIA unix_socket
    #       - FLUSH PRIVILEGES
    #     login_db: mysql
    #     login_user: root
    #     login_password: "{{ mariadb_root_password }}"
    #   when:
    #     - mariadb_community
    #     - (mariadb_root_password is defined) and (mariadb_root_password | length > 0)
    #   no_log: true

    - name: Enable MariaDB root logins with a socket using UPDATE
      ansible.builtin.command: mysql -uroot -e "UPDATE user SET plugin='mysql_native_password' WHERE User='root' AND Host='localhost'" mysql
      when: mariadb_version is version('10.2.0', '<')
      no_log: true

    # The ALTER USER statement was introduced in MariaDB 10.2.0
    # https://mariadb.com/kb/en/alter-user/
    - name: Enable MariaDB root logins with a socket using ALTER
      ansible.builtin.command: mysql -uroot -e "ALTER USER root@localhost IDENTIFIED VIA unix_socket; FLUSH PRIVILEGES" mysql
      when: mariadb_version is version('10.2.0', '>=')
      no_log: true

    - name: Remove /root/.my.cnf
      ansible.builtin.file:
        path: /root/.my.cnf
        state: absent

    - name: Re-read Ansible local facts
      ansible.builtin.setup:
        filter: ansible_local

    - name: Include the local facts tasks to set facts based on the local facts
      ansible.builtin.include_tasks: local_facts.yml

  tags:
    - mariadb
...
