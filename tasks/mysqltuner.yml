# Copyright 2018-2023 Chris Croome
#
# This file is part of the Webarchitects MariaDB Ansible role.
#
# The Webarchitects MariaDB Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects MariaDB Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects MariaDB Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: Install and run mysqltuner for MariaDB
  block:

    - name: Check the latest version of MySQLTuner
      ansible.builtin.uri:
        url: https://github.com/major/MySQLTuner-perl/releases/latest
        method: HEAD
        status_code: 302
        follow_redirects: none
      check_mode: false
      changed_when: false
      register: mariadb_mysqltuner_headers

    - name: Debug MySQLTuner latest headers
      ansible.builtin.debug:
        msg:
          - "Location: {{ mariadb_mysqltuner_headers.location }}"
          - "Path: {{ mariadb_mysqltuner_headers.location | ansible.builtin.urlsplit('path') }}"
          - "Version: {{ mariadb_mysqltuner_headers.location | ansible.builtin.urlsplit('path') | ansible.builtin.basename | ansible.builtin.regex_replace('^v') }}"
        verbosity: 2

    - name: Set a fact for the latest version of MySQLTuner
      ansible.builtin.set_fact:
        mariadb_mysqltuner_version_latest: "{{ mariadb_mysqltuner_headers.location | ansible.builtin.urlsplit('path') | ansible.builtin.basename | ansible.builtin.regex_replace('^v') }}"

    - name: Debug the latest version of MySQLTuner
      ansible.builtin.debug:
        var: mariadb_mysqltuner_version_latest
      when:
        - mariadb_mysqltuner_version_latest is defined
        - ansible_verbosity >= 1

    - name: Set a fact for the version of MySQLTuner that is required and the Debian / Ubuntu version
      ansible.builtin.set_fact:
        mariadb_mysqltuner_version_required: "{% if mariadb_mysqltuner_version == 'latest' %}{{ mariadb_mysqltuner_version_latest }}{% else %}{{ mariadb_mysqltuner_version }}{% endif %}"
        mariadb_mysqltuner_version_debian: "{{ mariadb_mysqltuner_versions | community.general.json_query(mariadb_jpq.tunerver) }}"

    - name: Debug the MySQLTuner version required
      ansible.builtin.debug:
        var: mariadb_mysqltuner_version_required

    - name: Debug the Debian / Ubuntu version of MySQLTuner
      ansible.builtin.debug:
        var: mariadb_mysqltuner_version_debian

    - name: Fail if the Debian / Ubuntu version of MySQLTuner is not defined
      ansible.builtin.assert:
        that:
          - mariadb_mysqltuner_version_debian is defined
        fail_msg: "Please check that {{ ansible_distribution_release }} is in the mariadb_mysqltuner_versions array."

    - name: Use a Debian version of MySQLTuner
      block:

        - name: Source MySQLTuner script absent
          ansible.builtin.file:
            path: /usr/local/bin/mysqltuner
            state: absent

        - name: Source MySQLTuner code absent
          ansible.builtin.file:
            path: /usr/local/src/MySQLTuner-perl
            state: absent

        - name: Source MySQLTuner basic_passwords.txt file absent
          ansible.builtin.file:
            path: /usr/local/bin/basic_passwords.txt
            state: absent

        - name: Source MySQLTuner vulnerabilities.csv absent
          ansible.builtin.file:
            path: /usr/share/mysqltuner/vulnerabilities.csv
            state: absent
          when: ( "mysqltuner" not in ansible_local.dpkg.installed )

        - name: Debian MySQLTuner present
          ansible.builtin.apt:
            pkg:
              - mysqltuner
            state: present
          register: mariadb_mysqltuner_present
          when: >-
            ( ansible_local.dpkg.installed is not defined ) or
            ( "mysqltuner" not in ansible_local.dpkg.installed )

        - name: Re-read Ansible local facts  # noqa: no-handler
          ansible.builtin.setup:
            filter: ansible_local
          when:
            - mariadb_mysqltuner_present.changed is defined
            - mariadb_mysqltuner_present.changed | bool

      when:
        - mariadb_mysqltuner_version_required is defined
        - mariadb_mysqltuner_version_debian is defined
        - mariadb_mysqltuner_version_required is ansible.builtin.version(mariadb_mysqltuner_version_debian, 'le')

    - name: Install MySQLTuner from GitHub
      block:

        - name: Debian MySQLTuner absent
          ansible.builtin.apt:
            pkg:
              - mysqltuner
            state: absent
          register: mariadb_mysqltuner_absent
          when: >-
            ( ansible_local.dpkg.installed is not defined ) or
            ( "mysqltuner" in ansible_local.dpkg.installed )

        - name: Debian git package present
          ansible.builtin.apt:
            pkg:
              - git
              - libjson-perl
            state: present
          register: mariadb_git_present
          when: >-
            ( ansible_local.dpkg.installed is not defined ) or
            ( "git" not in ansible_local.dpkg.installed ) or
            ( "libjson-perl" not in ansible_local.dpkg.installed )

        - name: Re-read Ansible local facts  # noqa: no-handler
          ansible.builtin.setup:
            filter: ansible_local
          when: >-
            ( ( mariadb_mysqltuner_absent.changed is defined ) and
            ( mariadb_mysqltuner_absent.changed | bool ) ) or
            ( ( mariadb_git_present.changed is defined ) and
            ( mariadb_git_present.changed | bool ) )

        - name: Source MySQLTuner install using git
          block:

            - name: MySQLTuner source code present
              ansible.builtin.git:
                repo: https://github.com/major/MySQLTuner-perl.git
                dest: /usr/local/src/MySQLTuner-perl
                version: "v{{ mariadb_mysqltuner_version_required }}"
                depth: 1
                update: true

            - name: MySQLTuner script in place
              ansible.builtin.copy:
                src: /usr/local/src/MySQLTuner-perl/mysqltuner.pl
                dest: /usr/local/bin/mysqltuner
                remote_src: true
                mode: 0755
                owner: root
                group: root

            - name: Directory for MySQLTuner assets in place
              ansible.builtin.file:
                path: /usr/share/mysqltuner
                state: directory
                mode: 0755
                owner: root
                group: root

            - name: MySQLTuner basic_passwords.txt file in place
              ansible.builtin.copy:
                src: /usr/local/src/MySQLTuner-perl/basic_passwords.txt
                dest: /usr/local/bin/basic_passwords.txt
                remote_src: true
                mode: 0644
                owner: root
                group: root

            - name: MySQLTuner vulnerabilities.csv file in place
              ansible.builtin.copy:
                src: /usr/local/src/MySQLTuner-perl/vulnerabilities.csv
                dest: /usr/share/mysqltuner/vulnerabilities.csv
                remote_src: true
                mode: 0644
                owner: root
                group: root

          when: >-
            ( ansible_local.dpkg.installed is not defined ) or
            ( "git" in ansible_local.dpkg.installed )

      when: mariadb_mysqltuner_version_required is ansible.builtin.version(mariadb_mysqltuner_version_debian, 'gt')

    - name: Check that mysqltuner is installed
      ansible.builtin.command: which mysqltuner
      check_mode: false
      changed_when: false
      register: mariadb_mysqltuner_which
      failed_when: mariadb_mysqltuner_which.rc is not regex('^0|1$')

    - name: Run mysqltuner when it is installed
      block:

        # Full full results run `mysqltuner --json --cvefile=/usr/share/mysqltuner/vulnerabilities.csv | jq`
        - name: Run mysqltuner
          ansible.builtin.command: mysqltuner --json --cvefile=/usr/share/mysqltuner/vulnerabilities.csv
          check_mode: false
          changed_when: false
          register: mariadb_mysqltuner_command
          failed_when: >-
            ( "JSON Module is needed" in mariadb_mysqltuner_command.stdout ) or
            ( mariadb_mysqltuner_command.rc != 0 )
          tags:
            - molecule-idempotence-notest

        - name: Set fact for mysqltuner results
          block:

            - name: Set facts
              ansible.builtin.set_fact:
                mariadb_mysqltuner_results: "{{ mariadb_mysqltuner_command.stdout | ansible.builtin.from_json }}"
                mariadb_mysqltuner_adjust_variables: "{{ mariadb_mysqltuner_command.stdout | ansible.builtin.from_json | community.general.json_query(mariadb_jpq.adjvars) }}"
                mariadb_mysqltuner_recommendations: "{{ mariadb_mysqltuner_command.stdout | ansible.builtin.from_json | community.general.json_query(mariadb_jpq.recs) }}"
                mariadb_mysqltuner_fragmented_tables: "{{ mariadb_mysqltuner_command.stdout | ansible.builtin.from_json | community.general.json_query(mariadb_jpq.fragtabs) }}"
                mariadb_mysqltuner_cve: "{{ mariadb_mysqltuner_command.stdout | ansible.builtin.from_json | community.general.json_query(mariadb_jpq.cve) }}"

            - name: Print mysqltuner full results when running with -v
              ansible.builtin.debug:
                var: mariadb_mysqltuner_results
              when:
                - mariadb_mysqltuner_results | length > 0
                - ansible_verbosity >= 1

            - name: Print mysqltuner results for Adjust variables
              ansible.builtin.debug:
                var: mariadb_mysqltuner_adjust_variables
              when:
                - mariadb_mysqltuner_adjust_variables != []
                - mariadb_mysqltuner_adjust_variables | length > 0

            - name: Print mysqltuner results for Fragmented tables
              ansible.builtin.debug:
                var: mariadb_mysqltuner_fragmented_tables
              when:
                - mariadb_mysqltuner_fragmented_tables != []
                - mariadb_mysqltuner_fragmented_tables | length > 0

            - name: Print mysqltuner results for Recommendations
              ansible.builtin.debug:
                var: mariadb_mysqltuner_recommendations
              when:
                - mariadb_mysqltuner_recommendations != []
                - mariadb_mysqltuner_recommendations | length > 0

            - name: Print mysqltuner results for CVE
              ansible.builtin.debug:
                var: mariadb_mysqltuner_cve
              when:
                - mariadb_mysqltuner_cve != []
                - mariadb_mysqltuner_cve | length > 0

          when: mariadb_mysqltuner_command is defined

      when: mariadb_mysqltuner_which.rc == 0

  tags:
    - mariadb
    - mariadb_conf
    - mariadb_mysqltuner
    - mysqltuner
...
