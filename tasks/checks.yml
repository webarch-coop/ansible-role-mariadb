# Copyright 2018-2024 Chris Croome
#
# This file is part of the Webarchitects MariaDB Ansible role.
#
# The Webarchitects MariaDB Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects MariaDB Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects MariaDB Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: Use my_print_defaults and community.mysql.mysql_info to gather information about the MariaDB server databases, users and version
  block:

    - name: Check that we are running a supported system
      ansible.builtin.assert:
        that:
          - ansible_distribution_release is regex(mariadb_regex.distros)
        quiet: true

    # When in a docker container mariadb_init.stdout == "sh"
    - name: Check if system has been booted with systemd as init system
      ansible.builtin.command: ps -p 1 -o comm=
      changed_when: false
      check_mode: false
      register: mariadb_ps
      failed_when: mariadb_ps.rc is not regex('^0|47$')

    - name: Set a fact for the init system
      ansible.builtin.set_fact:
        mariadb_init: "{{ mariadb_ps.stdout }}"
      when: mariadb_ps.rc == 0

    - name: When the exit code is 47 assume is is because this is a chroot
      ansible.builtin.set_fact:
        mariadb_init: chroot
      when: mariadb_ps.rc == 47

    - name: Debug the ini system
      ansible.builtin.debug:
        var: mariadb_init
        verbosity: "{% if ansible_check_mode | bool %}0{% else %}1{% endif %}"

    - name: Run my_print_defaults --help
      ansible.builtin.command: my_print_defaults --help
      check_mode: false
      changed_when: false
      register: mariadb_my_print_defaults_help

    - name: Set a fact for the arguments available for my_print_defaults
      ansible.builtin.set_fact:
        mariadb_my_print_defaults_options: >-
          {{ mariadb_my_print_defaults_help.stdout_lines |
          select('regex', '^  -.*$') |
          map('regex_replace', ',.*$') |
          map('trim') |
          map('regex_replace', '[ ].*$') }}

    - name: Debug my_print_defaults options
      ansible.builtin.debug:
        var: mariadb_my_print_defaults_options
        verbosity: "{% if ansible_check_mode | bool %}0{% else %}1{% endif %}"

    - name: Run my_print_defaults
      ansible.builtin.command: >-
        my_print_defaults
        {% if "--mariadbd" in mariadb_my_print_defaults_options %}
        --mariadbd
        {% else %}
        --mysqld
        {% endif %}
      check_mode: false
      changed_when: false
      register: mariadb_my_print_mysqld_defaults

    - name: Set a fact for the my_print_defaults results
      ansible.builtin.set_fact:
        mariadb_mysqld_defaults_lines: "{{ mariadb_my_print_mysqld_defaults.stdout_lines | map('regex_replace', '^[-]{2}') }}"
        mariadb_mysqld_defaults_variables: "{{ mariadb_my_print_mysqld_defaults.stdout_lines | map('regex_replace', '^[-]{2}') | map('regex_replace', '=.*$') | sort }}"

    - name: Check that no variables are duplicated
      ansible.builtin.assert:
        that:
          - mariadb_mysqld != ansible_loop.nextitem
        quiet: "{% if ansible_verbosity < 3 %}true{% else %}false{% endif %}"
        fail_msg: "The MariaDB variable {{ mariadb_mysqld }} is duplicated in the settings returned with `my_print_defaults --mariadbd`"
      when:
        - not ansible_loop.last
        - mariadb_mysqld != "plugin_load_add"
      loop: "{{ mariadb_mysqld_defaults_variables }}"
      loop_control:
        extended: true
        label: "{{ mariadb_mysqld }}"
        loop_var: mariadb_mysqld

    - name: Set a fact for the my_print_defaults results
      ansible.builtin.set_fact:
        mariadb_mysqld_defaults: "{% for mariadb_default in mariadb_mysqld_defaults_lines %}{{ mariadb_default + '\n' }}{% endfor %}"

    - name: Set a fact for the my_print_defaults results
      ansible.builtin.set_fact:
        mariadb_defaults: "{{ mariadb_mysqld_defaults | string | community.general.jc('ini') }}"

    - name: Debug MariaDB defaults
      ansible.builtin.debug:
        var: mariadb_defaults
        verbosity: "{% if ansible_check_mode | bool %}1{% else %}2{% endif %}"

    - name: Check that the MariaDB defaults socket path matches the specified socket path
      ansible.builtin.assert:
        that:
          - mariadb_defaults.socket is defined
          - mariadb_defaults.socket == mariadb_socket
        quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"
        fail_msg: >-
          This role depends on the Debian default of socket authentication for the root user using the default
          socket path of /run/mysqld/mysqld.sock, please ensure that the socket path in the default variables
          for this role match the socket path specified in /etc/mysql/my.cnf

    - name: Check that all the MariaDB config file paths start with /etc/mysql
      ansible.builtin.assert:
        that:
          - mariadb_config_file_path is regex(mariadb_regex.config_path)
        quiet: "{% if ansible_verbosity < 3 %}true{% else %}false{% endif %}"
      loop: "{{ mariadb_config | community.general.json_query(mariadb_jpq.config_path) }}"
      loop_control:
        loop_var: mariadb_config_file_path
        label: "{{ mariadb_config_file_path | ansible.builtin.basename }}"
      when:
        - mariadb_config | community.general.json_query(mariadb_jpq.config_path) is defined
        - mariadb_config | community.general.json_query(mariadb_jpq.config_path) != []

    - name: Check that all the MariaDB systemd file paths start with /etc/mysql
      ansible.builtin.assert:
        that:
          - mariadb_systemd_file_path is regex(mariadb_regex.systemd_path)
        quiet: "{% if ansible_verbosity < 3 %}true{% else %}false{% endif %}"
      loop: "{{ mariadb_systemd_units | community.general.json_query(mariadb_jpq.systemd_path) }}"
      loop_control:
        loop_var: mariadb_systemd_file_path
        label: "{{ mariadb_systemd_file_path | ansible.builtin.basename }}"
      when:
        - mariadb_systemd_file_path | community.general.json_query('mariadb_jpq.systemd_path') is defined
        - mariadb_systemd_file_path | community.general.json_query('mariadb_jpq.systemd_path') != []

    - name: Query the MariaDB databases, users and version using a socket
      community.mysql.mysql_info:
        filter:
          - databases
          - users
          - version
        return_empty_dbs: true
        login_user: root
        login_unix_socket: "{{ mariadb_socket }}"
      register: mariadb_info

    - name: Debug MariaDB info
      ansible.builtin.debug:
        var: mariadb_info
        verbosity: "{% if ansible_check_mode | bool %}1{% else %}2{% endif %}"

    - name: Set a variables for the MariaDB databases, users and version
      ansible.builtin.set_fact:
        mariadb_databases: "{{ mariadb_info.databases.keys() | reject('regex', '.*lost[+]found$') | list }}"
        mariadb_usernames: "{{ mariadb_info.users.localhost.keys() }}"
        mariadb_version: "{{ mariadb_info.version.major }}.{{ mariadb_info.version.minor }}.{{ mariadb_info.version.release }}"
        mariadb_version_major_minor: "{{ mariadb_info.version.major }}.{{ mariadb_info.version.minor }}"

    - name: Debug MariaDB databases
      ansible.builtin.debug:
        var: mariadb_databases
        verbosity: "{% if ansible_check_mode | bool %}0{% else %}1{% endif %}"

    - name: Debug MariaDB usernames
      ansible.builtin.debug:
        var: mariadb_usernames
        verbosity: "{% if ansible_check_mode | bool %}0{% else %}1{% endif %}"

    - name: Debug MariaDB version
      ansible.builtin.debug:
        var: mariadb_version
        verbosity: "{% if ansible_check_mode | bool %}0{% else %}1{% endif %}"

  tags:
    - mariadb
    - mariadb_checks
    - mariadb_info
...
