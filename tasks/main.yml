---
- name: Install and configure MariaDB
  block:

    - name: mariadb-server, mariadb-client and other packages present
      ansible.builtin.apt:
        pkg:
          - mariadb-client
          - mariadb-server
          - mycli
          - mysqltuner
          - pwgen
          - python3-mysqldb
        state: present
        update_cache: false

    - name: python-mysqldb present on Debian Jessie and Stretch
      ansible.builtin.apt:
        pkg:
          - python-mysqldb
        state: present
        update_cache: false
      when: ansible_distribution_release is regex('jessie|stretch')

    - name: Stat /root/.my.cnf
      stat:
        path: /root/.my.cnf
      register: mariadb_root_mycnf

    # The following is commented out since the version of community.mysql that ships
    # with Debian Bullseye is 1.2.0 which was released on 18 Jan 2021
    # https://github.com/ansible-collections/community.mysql/issues/31#issuecomment-762024683
    # and that version fails when there are databases
    # without tables present, as reported on 18 Aug 2021
    # https://github.com/ansible-collections/community.mysql/issues/204
    # - name: Query the MariaDB version and databases using the /root/.my.cnf file
    #   community.mysql.mysql_info:
    #     filter:
    #       - databases
    #       - version
    #     config_file: /root/.my.cnf
    #     login_user: root
    #     login_host: localhost
    #     login_port: 3306
    #   register: mariadb_info
    #   when: mariadb_root_mycnf.stat.exists

    # - name: Query the MariaDB version and databases using a socket
    #   community.mysql.mysql_info:
    #     filter:
    #       - databases
    #       - version
    #     login_user: root
    #     login_unix_socket: /run/mysqld/mysqld.sock
    #   register: mariadb_info
    #   when: not mariadb_root_mycnf.stat.exists

    # - name: Debug MariaDB info
    #   debug:
    #     var: mariadb_info

    - name: Run mariadb -V to get the version string
      ansible.builtin.command: mariadb -V
      check_mode: false
      changed_when: false
      register: mariadb_v

    - name: Set a variable for the Mariadb version
      ansible.builtin.set_fact:
        mariadb_version: "{{ mariadb_v.stdout.split(' ')[5] | regex_replace('-MariaDB,') }}"

    - name: Fail
      fail:

    - name: MariaDB server defaults in place
      ansible.builtin.template:
        src: templates/50-server.cnf.j2
        dest: /etc/mysql/mariadb.conf.d/50-server.cnf
        owner: root
        group: root
        mode: 0644
      notify: Restart mariadb

    - name: MariaDB client defaults in place
      ansible.builtin.template:
        src: templates/50-client.cnf.j2
        dest: /etc/mysql/mariadb.conf.d/50-client.cnf
        owner: root
        group: root
        mode: 0644

    - name: MariaDB mysqldump defaults in place
      ansible.builtin.template:
        src: templates/mysqldump.cnf.j2
        dest: /etc/mysql/conf.d/mysqldump.cnf
        owner: root
        group: root
        mode: 0644

    - name: MariaDB Systemd directory present
      ansible.builtin.file:
        path: /etc/systemd/system/mariadb.service.d
        state: directory
        owner: root
        group: root
        mode: 0755

    - name: MariaDB Systemd drop-in file in place
      ansible.builtin.template:
        src: templates/mariadb.conf.j2
        dest: /etc/systemd/system/mariadb.service.d/mariadb.conf
        owner: root
        group: root
        mode: 0644
      notify:
        - Reload systemd
        - Restart mariadb

    - name: Get a list of the databases
      community.mysql.mysql_query:
        query: SHOW DATABASES
        login_unix_socket: /run/mysqld/mysqld.sock
      register: mariadb_query_show_databases

    - name: Debug
      ansible.builtin.debug:
        var: mariadb_query_show_databases
        verbosity: 2

    - name: Set a variable for the list of databases present
      ansible.builtin.set_fact:
        mariadb_databases: "{{ result | map(attribute='Database') }}"
      loop: "{{ mariadb_query_show_databases.query_result }}"
      loop_control:
        loop_var: result

    - name: Include the MariaDB sys schema tasks
      ansible.builtin.include_tasks: sys.yml
      when: ( "sys" not in mariadb_databases )

    - name: Run mysql_upgrade
      ansible.builtin.command: mysql_upgrade
      register: mariadb_upgrade
      changed_when: ( "This installation of MariaDB is already upgraded" not in mariadb_upgrade.stdout )

    - name: Stat /etc/mysql/my.cnf
      ansible.builtin.stat:
        path: /etc/mysql/my.cnf
      register: mariadb_etc_my_cnf

    - name: Conditionally include the update-alternatives tasks
      ansible.builtin.include_tasks: update.yml
      when: ( mariadb_etc_my_cnf is defined ) and ( not mariadb_etc_my_cnf.stat.islnk )

    - name: Conditionally include the root password tasks
      ansible.builtin.include_tasks: mariadb_root.yml
      when: ( mariadb_root_auth is defined ) and ( mariadb_root_auth is regex("^password|socket$") )

    - name: Conditionally import the time zone tables import tasks
      ansible.builtin.include_tasks: tz.yml
      when: ( mariadb_time_zone_import is defined ) and ( mariadb_time_zone_import )

    - name: Conditionally include the user and database creation tasks
      ansible.builtin.include_tasks: mariadb_user.yml
      when: ( mariadb_username is defined ) and ( mariadb_username | length > 0 )

  when: mariadb
  tags:
    - mariadb
...
