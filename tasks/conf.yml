# Copyright 2018-2024 Chris Croome
#
# This file is part of the Webarchitects MariaDB Ansible role.
#
# The Webarchitects MariaDB Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects MariaDB Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects MariaDB Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: MariaDB configuration file
  block:

    - name: Debug mariadb_cnf
      ansible.builtin.debug:
        var: mariadb_cnf
        verbosity: "{% if ansible_check_mode | bool %}1{% else %}2{% endif %}"
      when: mariadb_cnf is defined

    - name: "Check the existance of the MariaDB configuration file {{ mariadb_cnf.path }}"
      ansible.builtin.stat:
        path: "{{ mariadb_cnf.path }}"
      register: mariadb_cnf_file_path

    - name: "MariaDB configuration file can only be edited it exists {{ mariadb_cnf.path }}"
      ansible.builtin.assert:
        that:
          - mariadb_cnf_file_path.stat.exists | bool
        quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"
        fail_msg: "The file {{ mariadb_cnf.path }} need to exist before it can be edited, to create it set the state to `present` or `templated`."
      when: mariadb_cnf.state == "edited"

    - name: "MariaDB configuration file absent {{ mariadb_cnf.path }}"
      ansible.builtin.file:
        path: "{{ mariadb_cnf.path }}"
        state: absent
      when:
        - mariadb_cnf.state is defined
        - mariadb_cnf.state == "absent"
        - mariadb_cnf_file_path.stat.exists | bool
      notify: Restart MariaDB

    - name: MariaDB configuration file present
      block:

        - name: "Debug the proposed MariaDB configuration variables for the file {{ mariadb_cnf.path }}"
          ansible.builtin.debug:
            var: mariadb_cnf.conf
            verbosity: "{% if ansible_check_mode | bool %}1{% else %}2{% endif %}"

        - name: "Check that the MariaDB configuration file variables don't contain dashes for {{ mariadb_cnf.path }}"
          ansible.builtin.assert:
            that:
              - mariadb_cnf_section.value | ansible.builtin.flatten | select('regex', '-') == []
            quiet: "{% if ansible_verbosity == 0 %}true{% else %}false{% endif %}"
            fail_msg: "Although dashes or underscores can be used for MariaDB configuration variables this role only suppports the use of underscores for the {{ mariadb_cnf.path }} file."
          loop: "{{ mariadb_cnf.conf | ansible.builtin.dict2items }}"
          loop_control:
            loop_var: mariadb_cnf_section
            label: "{{ mariadb_cnf_section.key }}"
          when: mariadb_cnf_section.keys() | length != 0

        - name: Read the existing file when it exists
          block:

            - name: "Slurp the MariaDB configuration file when it exists for {{ mariadb_cnf.path }}"
              ansible.builtin.slurp:
                path: "{{ mariadb_cnf.path }}"
              register: mariadb_cnf_file_b64encoded

            - name: "Debug the base64 decoded the existing MariaDB configuration file variables for {{ mariadb_cnf.path }}"
              ansible.builtin.debug:
                msg: "{{ mariadb_cnf_file_b64encoded['content'] | ansible.builtin.b64decode | string }}"
                verbosity: "{% if ansible_check_mode | bool %}2{% else %}3{% endif %}"

            - name: "Set a fact for the existing MariaDB configuration file variables for {{ mariadb_cnf.path }}"
              ansible.builtin.set_fact:
                mariadb_cnf_file_existing_vars: "{{ mariadb_cnf_file_b64encoded['content'] | ansible.builtin.b64decode | string | community.general.jc('ini') }}"

            - name: "Debug the existing MariaDB configuration file variables for {{ mariadb_cnf.path }}"
              ansible.builtin.debug:
                var: mariadb_cnf_file_existing_vars
                verbosity: "{% if ansible_check_mode | bool %}1{% else %}2{% endif %}"

            - name: "Debug the existing MariaDB configuration file sections for {{ mariadb_cnf.path }}"
              ansible.builtin.debug:
                var: mariadb_cnf_file_existing_vars.keys()
                verbosity: "{% if ansible_check_mode | bool %}2{% else %}3{% endif %}"

            - name: "Include the tasks to change dashes to underscores in existing MariaDB configuration file for {{ mariadb_cnf.path }}"
              ansible.builtin.include_tasks: conf_underscore.yml
              when: mariadb_cnf_section.value | ansible.builtin.flatten | select('regex', '-') != []
              loop: "{{ mariadb_cnf_file_existing_vars | ansible.builtin.dict2items }}"
              loop_control:
                loop_var: mariadb_cnf_section
                label: "{{ mariadb_cnf_section.key }}"

          when: mariadb_cnf_file_path.stat.exists | bool

        - name: "Include the MariaDB configuration file templated tasks for {{ mariadb_cnf.path }}"
          ansible.builtin.include_tasks: conf_templated.yml
          when: >-
            ( mariadb_cnf.state == "templated" ) or
            ( ( mariadb_cnf.state == "present" ) and
            ( not mariadb_cnf_file_path.stat.exists ) )

        - name: "Include the MariaDB configuration edited tasks for {{ mariadb_cnf.path }}"
          ansible.builtin.include_tasks: conf_edited.yml
          when: >-
            ( ( mariadb_cnf.state == "edited" ) or
            ( ( mariadb_cnf.state == "present" ) and
            ( mariadb_cnf_file_path.stat.exists ) ) ) and
            ( mariadb_cnf.conf != mariadb_cnf_file_existing_vars )

      when: >-
        ( mariadb_cnf.state is not defined ) or
        ( ( mariadb_cnf.state is defined ) and
        ( mariadb_cnf.state != "absent" ) )

  tags:
    - mariadb
    - mariadb_conf
...
