# https://www.percona.com/blog/2016/03/16/change-user-password-in-mysql-5-7-with-plugin-auth_socket/
---
- name: Set the  MariaDB root password
  block:

    - name: Stat /root/.my.cnf
      ansible.builtin.stat:
        path: /root/.my.cnf
      register: mariadb_root_mycnf

    - name: Generate a root password when /root/.my.cnf doesn't exist
      block:

        - name: Generate a random password for MariaDB root
          ansible.builtin.command: "pwgen -n {{ 24 | random(14) }} 1"
          register: mariadb_root_password_gen
          no_log: true

        - name: Set a fact for the mariadb_root_password
          ansible.builtin.set_fact:
            mariadb_root_password: "{{ mariadb_root_password_gen.stdout | trim }}"
          no_log: true

      when: not mariadb_root_mycnf.stat.exists

    - name: Enable MariaDB root logins with a password using UPDATE
      community.mysql.mysql_query:
        query:
          - "UPDATE user SET authentication_string=PASSWORD('{{ mariadb_root_password }}'), plugin='mysql_native_password' WHERE User='root' AND Host='localhost'"
          - FLUSH PRIVILEGES
        login_db: mysql
        login_unix_socket: /run/mysqld/mysqld.sock
      when: mariadb_version is version('10.2.0', '<')
      no_log: true

    # The ALTER USER statement was introduced in MariaDB 10.2.0
    # https://mariadb.com/kb/en/alter-user/
    - name: Enable MariaDB root logins with a password using ALTER
      community.mysql.mysql_query:
        query:
          - "ALTER USER 'root'@'localhost' IDENTIFIED VIA mysql_native_password USING PASSWORD('{{ mariadb_root_password }}')"
          - FLUSH PRIVILEGES
        login_db: mysql
        login_unix_socket: /run/mysqld/mysqld.sock
      when: mariadb_version is version('10.2.0', '>=')
      no_log: true

    # - name: Enable MariaDB root logins with a password using UPDATE for MariaDB < 10.2.0
    #   ansible.builtin.command: mysql -uroot -e "UPDATE mysql.user SET authentication_string=PASSWORD('{{ mariadb_root_password }}'), plugin='mysql_native_password' WHERE User='root' AND Host='localhost'; FLUSH PRIVILEGES;"
    #   when: mariadb_version is version('10.2.0', '<')
    #   # no_log: true

    # - name: Enable MariaDB root logins with a password using ALTER for MariaDB >= 10.2.0
    #   ansible.builtin.command: mysql -uroot -e "ALTER USER 'root'@'localhost' IDENTIFIED VIA mysql_native_password USING PASSWORD('{{ mariadb_root_password }}'); FLUSH PRIVILEGES;"
    #   when: mariadb_version is version('10.2.0', '>=')
    #   # no_log: true

    - name: MariaDB root password written to /root/.my.cnf
      ansible.builtin.template:
        src: root.my.cnf.j2
        dest: /root/.my.cnf
        owner: root
        group: root
        mode: 0400
        force: true
      no_log: true

    - name: Include the local facts tasks to check the password authentication
      include_tasks: local_facts.yml

  tags:
    - mariadb
...
