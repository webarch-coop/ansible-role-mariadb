# Copyright 2018-2025 Chris Croome
#
# This file is part of the Webarchitects MariaDB Ansible role.
#
# The Webarchitects MariaDB Ansible role is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
#
# The Webarchitects MariaDB Ansible role is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with the Webarchitects MariaDB Ansible role. If not, see <https://www.gnu.org/licenses/>.
---
- name: MariaDB configuration file section edited
  block:

    - name: Debug mariadb_cnf_section.key
      ansible.builtin.debug:
        var: mariadb_cnf_section.key
        # verbosity: "{% if ansible_check_mode | bool %}1{% else %}2{% endif %}"
      tags:
        - debug

    - name: "Debug the existing values for section {{ mariadb_cnf_section.key }}"
      ansible.builtin.debug:
        var: mariadb_cnf_file_existing_vars
        # verbosity: "{% if ansible_check_mode | bool %}1{% else %}2{% endif %}"
      tags:
        - debug

    - name: "Set a facts for the existing sections and value of section {{ mariadb_cnf_section.key }}"
      ansible.builtin.set_fact:
        mariadb_cnf_file_existing_sections: "{{ mariadb_cnf_file_existing_vars.keys() }}"
        mariadb_cnf_file_existing_section: "{{ mariadb_cnf_file_existing_vars | community.general.json_query(mariadb_cnf_file_section_existing_jpq) }}"
      vars:
        mariadb_cnf_file_section_existing_jpq: "{{ mariadb_cnf_section.key }}"

    - name: Debug mariadb_cnf_file_existing_sections
      ansible.builtin.debug:
        var: mariadb_cnf_file_existing_sections
        # verbosity: "{% if ansible_check_mode | bool %}1{% else %}2{% endif %}"
      tags:
        - debug

    - name: Debug mariadb_cnf_file_existing_section
      ansible.builtin.debug:
        var: mariadb_cnf_file_existing_section
        # verbosity: "{% if ansible_check_mode | bool %}1{% else %}2{% endif %}"
      tags:
        - debug

    - name: Set facts when the proposed section is an existing section
      block:

        - name: "Set a fact for the file section existing keys for section {{ mariadb_cnf_section.key }}"
          ansible.builtin.set_fact:
            mariadb_cnf_file_section_existing_keys: "{{ mariadb_cnf_file_existing_vars | community.general.json_query(mariadb_cnf_file_section_existing_keys_jpq) | sort }}"
          vars:
            mariadb_cnf_file_section_existing_jpq: "{{ mariadb_cnf_section.key }}"
            mariadb_cnf_file_section_existing_keys_jpq: "{{ mariadb_cnf_section.key }}|keys(@)"
          when: mariadb_cnf_file_existing_vars | community.general.json_query(mariadb_cnf_file_section_existing_jpq) != {}

        - name: "Debug the existing variable keys for section {{ mariadb_cnf_section.key }}"
          ansible.builtin.debug:
            var: mariadb_cnf_file_section_existing_keys
            # verbosity: "{% if ansible_check_mode | bool %}1{% else %}2{% endif %}"
          tags:
            - debug

      when:
        - mariadb_cnf_section.key in mariadb_cnf_file_existing_vars
        - mariadb_cnf_file_existing_section != {}

    - name: "Set an empty existing keys array as there is no existing section named {{ mariadb_cnf_section.key }}"
      ansible.builtin.set_fact:
        mariadb_cnf_file_section_existing_keys: []
      when: >-
        (mariadb_cnf_section.key not in mariadb_cnf_file_existing_vars) or
        (mariadb_cnf_file_existing_section == {})

    - name: "Debug the proposed values for section {{ mariadb_cnf_section.key }}"
      ansible.builtin.debug:
        var: mariadb_cnf_section.value
        # verbosity: "{% if ansible_check_mode | bool %}1{% else %}2{% endif %}"
      tags:
        - debug

    - name: "Set a fact for the proposed keys for section {{ mariadb_cnf_section.key }}"
      ansible.builtin.set_fact:
        mariadb_cnf_file_section_proposed_keys: "{{ mariadb_cnf_section.value.keys() | sort }}"

    - name: "Debug the proposed variable keys for section {{ mariadb_cnf_section.key }}"
      ansible.builtin.debug:
        var: mariadb_cnf_file_section_proposed_keys
        # verbosity: "{% if ansible_check_mode | bool %}1{% else %}2{% endif %}"
      tags:
        - debug

    - name: "Set a empty array fact for the proposed value-less keys for section {{ mariadb_cnf_section.key }}"
      ansible.builtin.set_fact:
        mariadb_cnf_file_section_proposed_value_less_keys: []

    - name: "Debug the existing variable keys for section {{ mariadb_cnf_section.key }}"
      ansible.builtin.debug:
        var: mariadb_cnf_file_section_existing_keys
        # verbosity: "{% if ansible_check_mode | bool %}1{% else %}2{% endif %}"
      when: mariadb_cnf_file_existing_section != {}
      tags:
        - debug

    - name: "Set a fact for the proposed variables without values for section {{ mariadb_cnf_section.key }}"
      ansible.builtin.set_fact:
        mariadb_cnf_file_section_proposed_value_less_keys: "{{ mariadb_cnf_file_section_proposed_value_less_keys + [mariadb_cnf_variable_pair.key] }}"
      when: mariadb_cnf_variable_pair.value | type_debug == 'NoneType'
      loop: "{{ mariadb_cnf_section.value | ansible.builtin.dict2items }}"
      loop_control:
        loop_var: mariadb_cnf_variable_pair
        label: "{{ mariadb_cnf_variable_pair.key }}"

    - name: "Debug the proposed variables without values for section {{ mariadb_cnf_section.key }}"
      ansible.builtin.debug:
        var: mariadb_cnf_file_section_proposed_value_less_keys
        # verbosity: "{% if ansible_check_mode | bool %}1{% else %}2{% endif %}"
      tags:
        - debug

    - name: "Debug the existing and proposed MariaDB configuration file variables for section {{ mariadb_cnf_section.key }}"
      ansible.builtin.debug:
        msg:
          - "Path: {{ mariadb_cnf.path }}"
          - "Section: {{ mariadb_cnf_section.key }}"
          - "Existing: {% if mariadb_cnf_variable_pair.key in mariadb_cnf_file_section_existing_keys %}{{ mariadb_cnf_variable_pair.key }}: {{ mariadb_cnf_file_existing_vars | community.general.json_query(mariadb_cnf_variable_jpq) }}{% endif %}"
          - "Proposed: {{ mariadb_cnf_variable_pair.key }}{% if mariadb_cnf_variable_pair.value | type_debug != 'NoneType' %}: {{ mariadb_cnf_variable_pair.value }}{% endif %}"
          - "Paoposed variable value type: {{ mariadb_cnf_variable_pair.value | type_debug }}"
          - "Regex: ^[#][ ]{0,9}{{ mariadb_cnf_variable_pair.key | regex_replace('_', '[_-]') }}[ ]{0,9}[=]{0,1}"
        verbosity: "{% if ansible_check_mode | bool %}0{% else %}1{% endif %}"
      when: >-
        ( mariadb_cnf_variable_pair.key not in mariadb_cnf_file_section_existing_keys ) or
        ( ( mariadb_cnf_variable_pair.key not in mariadb_cnf_file_section_proposed_value_less_keys ) and
        ( mariadb_cnf_variable_pair.value != mariadb_cnf_file_existing_vars | community.general.json_query(mariadb_cnf_variable_jpq) ) )
      vars:
        mariadb_cnf_variable_jpq: '"{{ mariadb_cnf_section.key }}"."{{ mariadb_cnf_variable_pair.key }}"'
      loop: "{{ mariadb_cnf_section.value | ansible.builtin.dict2items }}"
      loop_control:
        loop_var: mariadb_cnf_variable_pair
        label: "{{ mariadb_cnf_variable_pair.key }}"
      tags:
        - debug

    - name: "MariaDB configuration file edited for keys without values for section {{ mariadb_cnf_section.key }}"
      community.general.ini_file:
        path: "{{ mariadb_cnf.path }}"
        section: "{{ mariadb_cnf_section.key }}"
        option: "{{ mariadb_cnf_variable_pair.key }}"
        allow_no_value: true
        modify_inactive_option: true
        no_extra_spaces: false
        mode: "{{ mariadb_cnf.mode | default('0644') }}"
        owner: "{{ mariadb_cnf.owner | default('root') }}"
        group: "{{ mariadb_cnf.owner | default('root') }}"
      when:
        - mariadb_cnf_variable_pair.key in mariadb_cnf_file_section_proposed_value_less_keys
        - mariadb_cnf_variable_pair.key not in mariadb_cnf_file_section_existing_keys
      vars:
        mariadb_cnf_variable_jpq: '"{{ mariadb_cnf_section.key }}"."{{ mariadb_cnf_variable_pair.key }}"'
      loop: "{{ mariadb_cnf_section.value | ansible.builtin.dict2items }}"
      loop_control:
        loop_var: mariadb_cnf_variable_pair
        label: "{{ mariadb_cnf_variable_pair.key }}"
      notify: Restart mariadb

    - name: "MariaDB configuration file edited for keys with values for section {{ mariadb_cnf_section.key }}"
      community.general.ini_file:
        path: "{{ mariadb_cnf.path }}"
        section: "{{ mariadb_cnf_section.key }}"
        option: "{{ mariadb_cnf_variable_pair.key }}"
        value: "{{ mariadb_cnf_variable_pair.value }}"
        modify_inactive_option: true
        no_extra_spaces: false
        mode: "{{ mariadb_cnf.mode | default('0644') }}"
        owner: "{{ mariadb_cnf.owner | default('root') }}"
        group: "{{ mariadb_cnf.owner | default('root') }}"
      when: >-
        ( mariadb_cnf_variable_pair.key not in mariadb_cnf_file_section_proposed_value_less_keys ) and
        ( ( mariadb_cnf_variable_pair.key not in mariadb_cnf_file_section_existing_keys ) or
        ( mariadb_cnf_variable_pair.value != mariadb_cnf_file_existing_vars | community.general.json_query(mariadb_cnf_variable_jpq) ) )
      vars:
        mariadb_cnf_variable_jpq: '"{{ mariadb_cnf_section.key }}"."{{ mariadb_cnf_variable_pair.key }}"'
      loop: "{{ mariadb_cnf_section.value | ansible.builtin.dict2items }}"
      loop_control:
        loop_var: mariadb_cnf_variable_pair
        label: "{{ mariadb_cnf_variable_pair.key }} = {{ mariadb_cnf_variable_pair.value }}"
      notify: Restart mariadb

  tags:
    - mariadb
    - mariadb_conf
...
